        -:    0:Source:romanos.cpp
        -:    1:#include "romanos.hpp"
        -:    2:
       23:    3:bool mais_de_quatro_repeticoes(const char *num_romano) {
       23:    4:    int frequencia[7] = {0};
      107:    5:    for (int i = 0; num_romano[i] != '\0'; i++) {
       84:    6:        char caractere = num_romano[i];
       84:    7:        switch (caractere) {
       18:    8:            case 'I':
       18:    9:                frequencia[0]++;
       18:   10:                break;
        6:   11:            case 'V':
        6:   12:                frequencia[1]++;
        6:   13:                break;
       38:   14:            case 'X':
       38:   15:                frequencia[2]++;
       38:   16:                break;
        7:   17:            case 'L':
        7:   18:                frequencia[3]++;
        7:   19:                break;
        8:   20:            case 'C':
        8:   21:                frequencia[4]++;
        8:   22:                break;
        2:   23:            case 'D':
        2:   24:                frequencia[5]++;
        2:   25:                break;
        2:   26:            case 'M':
        2:   27:                frequencia[6]++;
        2:   28:                break;
        -:   29:        }
        -:   30:    }
        -:   31:
      174:   32:    for (int i = 0; i < 7; i++) {
      153:   33:        if (frequencia[i] > 4) {
        2:   34:            return true;
        -:   35:        }
        -:   36:    }
        -:   37:
       21:   38:    return false;
        -:   39:}
        -:   40:
       21:   41:bool tem_repeticao_consecutiva(const char *num_romano) {
       21:   42:    int contador = 1;
       21:   43:    char caractere_anterior = num_romano[0];
       54:   44:    for (int i = 1; num_romano[i] != '\0'; i++) {
       34:   45:        if (num_romano[i] == caractere_anterior) {
       19:   46:            contador++;
       19:   47:            if (contador > 3) {
        1:   48:                return true;
        -:   49:            }
        -:   50:        } else {
       15:   51:            contador = 1;
       15:   52:            caractere_anterior = num_romano[i];
        -:   53:        }
        -:   54:    }
       20:   55:    return false;
        -:   56:}
        -:   57:
       82:   58:int valor_romano(char caractere) {
       82:   59:    switch (caractere) {
       19:   60:        case 'I':
       19:   61:            return 1;
        9:   62:        case 'V':
        9:   63:            return 5;
       32:   64:        case 'X':
       32:   65:            return 10;
        3:   66:        case 'L':
        3:   67:            return 50;
        8:   68:        case 'C':
        8:   69:            return 100;
        4:   70:        case 'D':
        4:   71:            return 500;
        3:   72:        case 'M':
        3:   73:            return 1000;
        4:   74:        default:
        4:   75:            return -1;
        -:   76:    }
        -:   77:}
        -:   78:
       23:   79:int romanos_para_decimal(char const * num_romano) {
       23:   80:    if (mais_de_quatro_repeticoes(num_romano)) {
        2:   81:        return -1;
        -:   82:    }
        -:   83:
       21:   84:    if (tem_repeticao_consecutiva(num_romano)) {
        1:   85:        return -1;
        -:   86:    }
        -:   87:
       20:   88:    int decimal = 0;
        -:   89:
       20:   90:    if (num_romano == nullptr || *num_romano == '\0') {
    #####:   91:        return -1;
        -:   92:    }
        -:   93:
       63:   94:    for (int i = 0; num_romano[i] != '\0'; i++) {
       48:   95:        int valor_atual = valor_romano(num_romano[i]);
       48:   96:        if (valor_atual == -1) {
        3:   97:            return -1;
        -:   98:        }
        -:   99:
       45:  100:        if (num_romano[i + 1] != '\0' && valor_atual < valor_romano(num_romano[i + 1])) {
        4:  101:            if (i > 0 && valor_romano(num_romano[i - 1]) <= valor_atual) {
        1:  102:                return -1;
        -:  103:            }
        3:  104:            int subtracao = valor_romano(num_romano[i + 1]) - valor_atual;
        3:  105:            if (subtracao == 4 || subtracao == 5 || subtracao == 40 || subtracao == 50 || subtracao == 400 || subtracao == 500) {
        2:  106:                decimal -= valor_atual;
        -:  107:            } else {
        1:  108:                return -1;
        -:  109:            }
        -:  110:        } else {
       41:  111:            decimal += valor_atual;
        -:  112:        }
        -:  113:    }
        -:  114:
       15:  115:    return decimal;
        -:  116:}
